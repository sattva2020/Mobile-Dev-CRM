#!/usr/bin/env node

/**
 * üéØ OnlyTests –ü–æ–ª–Ω—ã–π –ü–∞—Ä—Å–µ—Ä - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Å —Å–∞–π—Ç–∞
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π OnlyTests –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ü—Ä–æ–º–ø—Ç–æ–≤
 */

// –ü–æ–ª–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã OnlyTests (–ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ Playwright MCP)
const onlyTestsFullPrompts = {
  // 1. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  planning: {
    testPlan: {
      title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ü–ª–∞–Ω–∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Å—Ä–µ–¥—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä–µ—Å—É—Ä—Å–∞–º –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤.',
      tags: ['–ø–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', '—Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ä–µ–¥—ã', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤', '—Ç–µ—Å—Ç–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ'],
      fullPrompt: `## System Instruction
You are an expert QA Test Manager. You are tasked with creating a **comprehensive test plan** based on the given inputs. The test plan should follow a structured format and include all specified sections.  
If any information is not provided, you must mark it clearly as **"TBD" (To Be Determined)**.

## Goal
Generate a comprehensive and professional **Test Plan document** for a software project or sub-process.

## Input
- Project or Test Sub-process name.
- Details about the project scope, risks, stakeholders, test items, etc.
- If information is missing, explicitly mark it as **TBD**.

## Procedure
1. Organize the test plan into the specified sections.
2. For each section, provide detailed and precise content.
3. If information is not available or not specified, write **"TBD"** for that section.
4. Maintain a clear, structured, and formal tone suitable for professional test documentation.

## Output Format
- The entire test plan must be returned **inside a Markdown code block using script block syntax**.
- Use appropriate section headers for each part of the test plan.
- For missing information, display: **TBD**.
- The final output should be a **clean, well-formatted test plan document**.

## Test Plan Sections
1. Project/Test Sub-process
2. Test Item(s)
3. Test Scope
4. Assumptions and Constraints
5. Stakeholders
6. Testing Communication
7. Product Risks
8. Project Risks
9. Test Strategy for test sub-process
10. Test Deliverables
11. Test Design Techniques
12. Test Completion Criteria
13. Metrics Collected
14. Test Data Requirements
15. Test Environment Requirements
16. Retesting and Regression Testing
17. Suspension and Resumption Criteria
18. Deviations from the Organizational Test Strategy
19. Testing Activities and Estimates
20. Roles, Activities, and Responsibilities
21. Hiring Needs
22. Training Needs
23. Schedule

## Quality Checklist
- Includes **all 23 specified sections**.
- Missing information is clearly marked as **TBD**.
- Output is returned **inside a Markdown script block**.
- Uses professional language and structured formatting.
- Sections are clearly delineated and labeled.

## Revision Loop
After generating the Test Plan, conclude with:  
> Confirm if further adjustments are needed.

## Example
(Partial Example for illustration)

# Test Plan

## Project/Test Sub-process
Project ABC - Mobile App Testing

## Test Item(s)
- Login Module
- Payment Gateway Integration

## Test Scope
- Functional Testing of user authentication and payment flow.
- Excludes performance and security testing.

## Assumptions and Constraints
- Third-party payment gateway will be available for sandbox testing.
- Limited access to production-like test environment.

...

## Training Needs
**TBD**

## Schedule
**TBD**`
    },

    testStrategy: {
      title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é, –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è.',
      tags: ['—Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏', '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', 'agile —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞'],
      fullPrompt: `## System Instruction
You are a senior QA strategist responsible for producing a **comprehensive Test Strategy document**. Based on the provided context, generate a professional and structured strategy that includes all the required sections. If any information is missing or not available, clearly mark that section as **"TBD" (To Be Determined)**.

## Goal
Create a comprehensive **Test Strategy** document to guide all testing activities across a project or organization.

## Input
- Contextual information about the testing environment, project scope, methodology, tools, and any business-specific constraints or goals.
- If any section lacks details, fill it in with **TBD**.

## Procedure
1. Organize the strategy into the specified sections.
2. Use professional, precise language throughout.
3. Include detailed content where possible; mark any unknowns as **TBD**.
4. Ensure the document is cohesive, consistent, and aligned with industry best practices.

## Output Format
- The final result **must be enclosed inside a Markdown code block using script block syntax**.
- Each section must be clearly labeled with its respective header.
- Missing or unspecified information should be marked as: **TBD**.
- The entire strategy must be presented as a well-structured, professional document.

## Test Strategy Sections
1. Scope
2. References
3. Glossary
4. Objectives
5. General Strategy
6. Risk Management
7. Test Selection and Prioritization
8. Test Documentation and Reporting
9. Test Automation and Tools
10. Configuration Management
11. Incident Management
12. Sub-process Strategy Details
13. Agile Test Strategy Considerations

## Quality Checklist
- All **13 sections** are included in the output.
- Missing details are explicitly marked as **TBD**.
- Results are presented **inside a Markdown script block**.
- Content is clear, organized, and suitable for strategic QA planning.

## Revision Loop
After generating the Test Strategy, conclude with:
> Confirm if further adjustments are needed.

## Example
(Partial)

# Test Strategy

## Scope
This document outlines the high-level test strategy for the XYZ platform.

## References
- IEEE 829 Standard for Test Documentation
- Agile Testing Principles (Crispin & Gregory)

## Glossary
- UAT: User Acceptance Testing
- CI/CD: Continuous Integration / Continuous Deployment

## Objectives
- Ensure product quality aligns with business requirements
- Mitigate risks early through proactive testing
...

## Agile Test Strategy Considerations
TBD`
    },

    riskAssessment: {
      title: '–û—Ü–µ–Ω–∫–∞ –†–∏—Å–∫–æ–≤ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –û–±–µ—Å–ø–µ—á–µ–Ω–∏—è',
      description: '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è, –≤—ã—è–≤–ª–µ–Ω–∏–µ –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∏—Å–∫–æ–≤, –æ—Ü–µ–Ω–∫–∞ –∏—Ö –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –≤–ª–∏—è–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ä–∏—Å–∫–æ–≤ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π —Ä–µ–µ—Å—Ç—Ä–∞ —Ä–∏—Å–∫–æ–≤.',
      tags: ['–æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤', '–∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤', '–º–∞—Ç—Ä–∏—Ü–∞ —Ä–∏—Å–∫–æ–≤', '—Ä–µ–µ—Å—Ç—Ä —Ä–∏—Å–∫–æ–≤', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤', '–∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  },

  // 2. –ê–Ω–∞–ª–∏–∑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  analysis: {
    requirementsAnalysis: {
      title: '–ê–Ω–∞–ª–∏–∑ –¢—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –í–æ–ø—Ä–æ—Å–æ–≤',
      description: '–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ–±–µ–ª–æ–≤, —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é.',
      tags: ['–∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π', '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤', '–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤', '—è—Å–Ω–æ—Å—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    },

    userStoriesQuality: {
      title: '–û—Ü–µ–Ω–∫–∞ –ö–∞—á–µ—Å—Ç–≤–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ò—Å—Ç–æ—Ä–∏–π',
      description: '–û—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å—Ç–æ—Ä–∏–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º Agile, –≤–∫–ª—é—á–∞—è –∫—Ä–∏—Ç–µ—Ä–∏–∏ INVEST, –∫–∞—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–∏–µ–º–∫–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è Definition of Ready.',
      tags: ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏', 'agile', '–æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞', '–∫—Ä–∏—Ç–µ—Ä–∏–∏ INVEST', '–∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏–µ–º–∫–∏', 'definition of ready'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  },

  // 3. –î–∏–∑–∞–π–Ω –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  design: {
    testChecklist: {
      title: '–°–æ–∑–¥–∞–Ω–∏–µ –ß–µ–∫-–ª–∏—Å—Ç–∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      description: '–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤ –ø–æ–¥—Ä–æ–±–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, –ø—Ä–µ–∂–¥–µ —á–µ–º —Å—á–∏—Ç–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–æ—Ç–æ–≤—ã–º.',
      tags: ['—á–µ–∫-–ª–∏—Å—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', '–¥–∏–∑–∞–π–Ω —Ç–µ—Å—Ç–æ–≤', '–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π', '—Ç–µ—Å—Ç–æ–≤–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    },

    testCasesClassic: {
      title: '–°–æ–∑–¥–∞–Ω–∏–µ –¢–µ—Å—Ç-–∫–µ–π—Å–æ–≤ (–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)',
      description: '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç-–∫–µ–π—Å—ã –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –¥–≤—É—Ö–∫–æ–ª–æ–Ω–æ—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –≥–¥–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ —É–∫–∞–∑–∞–Ω –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –≤–∫–ª—é—á–∞—è –ø—Ä–µ–¥—É—Å–ª–æ–≤–∏—è, —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —á–µ—Ç–∫–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã–µ —à–∞–≥–∏ –¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤.',
      tags: ['—Ç–µ—Å—Ç-–∫–µ–π—Å—ã', '–¥–∏–∑–∞–π–Ω —Ç–µ—Å—Ç–æ–≤', '—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤', '–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    },

    testCasesTable: {
      title: '–°–æ–∑–¥–∞–Ω–∏–µ –¢–µ—Å—Ç-–∫–µ–π—Å–æ–≤ (–¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥)',
      description: '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç-–∫–µ–π—Å—ã –≤ –≤–∏–¥–µ –º–Ω–æ–≥–æ–∫–æ–ª–æ–Ω–æ—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã —Å ID, –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –ø—Ä–µ–¥—É—Å–ª–æ–≤–∏—è–º–∏, —à–∞–≥–∞–º–∏, –æ–∂–∏–¥–∞–µ–º—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è–º–∏ - –≤—Å—ë –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.',
      tags: ['—Ç–µ—Å—Ç-–∫–µ–π—Å—ã', '–¥–∏–∑–∞–π–Ω —Ç–µ—Å—Ç–æ–≤', '–ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤', '–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤', '–æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    },

    testCasesGherkin: {
      title: '–°–æ–∑–¥–∞–Ω–∏–µ –¢–µ—Å—Ç-–∫–µ–π—Å–æ–≤ (–§–æ—Ä–º–∞—Ç Gherkin)',
      description: '–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç-–∫–µ–π—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Gherkin —Å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –î–∞–Ω–æ/–ö–æ–≥–¥–∞/–¢–æ–≥–¥–∞, –¥–µ–ª–∞—è –∏—Ö –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∫–∞–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞, —Ç–∞–∫ –∏ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è BDD –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.',
      tags: ['—Ç–µ—Å—Ç-–∫–µ–π—Å—ã', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏', 'gherkin', '–¥–∏–∑–∞–π–Ω —Ç–µ—Å—Ç–æ–≤', '–∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    },

    testCasesQuality: {
      title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–∞—á–µ—Å—Ç–≤–∞ –¢–µ—Å—Ç-–∫–µ–π—Å–æ–≤',
      description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –∫–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª (–∑–∞–≥–æ–ª–æ–≤–æ–∫, —à–∞–≥–∏, –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã) –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏.',
      tags: ['—Ç–µ—Å—Ç-–∫–µ–π—Å—ã', '–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞', '–ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏', '—É–ª—É—á—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  },

  // 4. –¢–µ—Å—Ç–æ–≤—ã–µ –î–∞–Ω–Ω—ã–µ
  testData: {
    dataGeneration: {
      title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¢–µ—Å—Ç–æ–≤—ã—Ö –î–∞–Ω–Ω—ã—Ö',
      description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–±–æ—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö (CSV, JSON –∏ –¥—Ä.) —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –∏ –≥—Ä–∞–Ω–∏—á–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–≤–æ–¥–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.',
      tags: ['—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ', '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö', '–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏', '–≤–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞', '—Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  },

  // 5. –î–µ—Ñ–µ–∫—Ç—ã
  defects: {
    bugReports: {
      title: '–£–ª—É—á—à–µ–Ω–∏–µ –û—Ç—á–µ—Ç–æ–≤ –æ–± –û—à–∏–±–∫–∞—Ö',
      description: '–£–ª—É—á—à–∏—Ç–µ –æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö –≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–∏, —Å–¥–µ–ª–∞–≤ –∏—Ö –ø–æ–Ω—è—Ç–Ω—ã–º–∏, –ø–æ–ª–Ω—ã–º–∏ –∏ —É–¥–æ–±–Ω—ã–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, —Å–ª–µ–¥—É—è –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º –æ—Ç—Ä–∞—Å–ª–∏.',
      tags: ['–æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö', '–æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', '–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–∞–º–∏'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  },

  // 6. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  completion: {
    finalReport: {
      title: '–ò—Ç–æ–≥–æ–≤—ã–π –û—Ç—á–µ—Ç –æ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö –∏—Ç–æ–≥–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∏ –æ—Ü–µ–Ω–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–∞.',
      tags: ['–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏', '–º–µ—Ç—Ä–∏–∫–∏', '–∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç', '–æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞', '–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'],
      fullPrompt: 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞'
    }
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
const getFullPrompt = (category, type) => {
  if (onlyTestsFullPrompts[category] && onlyTestsFullPrompts[category][type]) {
    return onlyTestsFullPrompts[category][type];
  }
  return null;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
const getAllFullPrompts = () => {
  return onlyTestsFullPrompts;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
const searchFullPrompts = (keywords) => {
  const results = [];
  const searchTerms = keywords.toLowerCase().split(' ');
  
  Object.keys(onlyTestsFullPrompts).forEach(category => {
    Object.keys(onlyTestsFullPrompts[category]).forEach(type => {
      const prompt = onlyTestsFullPrompts[category][type];
      const searchText = `${prompt.title} ${prompt.description} ${prompt.fullPrompt}`.toLowerCase();
      
      if (searchTerms.some(term => searchText.includes(term))) {
        results.push({
          category,
          type,
          prompt
        });
      }
    });
  });
  
  return results;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const getStats = () => {
  const stats = {
    totalCategories: Object.keys(onlyTestsFullPrompts).length,
    totalPrompts: 0,
    fullPrompts: 0,
    tbdPrompts: 0,
    categories: {}
  };
  
  Object.keys(onlyTestsFullPrompts).forEach(category => {
    const categoryPrompts = Object.keys(onlyTestsFullPrompts[category]).length;
    stats.totalPrompts += categoryPrompts;
    stats.categories[category] = categoryPrompts;
    
    Object.keys(onlyTestsFullPrompts[category]).forEach(type => {
      const prompt = onlyTestsFullPrompts[category][type];
      if (prompt.fullPrompt === 'TBD - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å–∞–π—Ç–∞') {
        stats.tbdPrompts++;
      } else {
        stats.fullPrompts++;
      }
    });
  });
  
  return stats;
};

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
module.exports = {
  onlyTestsFullPrompts,
  getFullPrompt,
  getAllFullPrompts,
  searchFullPrompts,
  getStats
};

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  console.log('üéØ OnlyTests –ü–æ–ª–Ω—ã–π –ü–∞—Ä—Å–µ—Ä - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  console.log('==========================================');
  
  const stats = getStats();
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤:`);
  console.log(`   –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${stats.totalCategories}`);
  console.log(`   –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤: ${stats.totalPrompts}`);
  console.log(`   –ü–æ–ª–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤: ${stats.fullPrompts}`);
  console.log(`   TBD –ø—Ä–æ–º–ø—Ç–æ–≤: ${stats.tbdPrompts}`);
  
  console.log(`\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:`);
  Object.keys(stats.categories).forEach(category => {
    console.log(`   ${category}: ${stats.categories[category]} –ø—Ä–æ–º–ø—Ç–æ–≤`);
  });
  
  console.log(`\nüîç –ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º "—Ç–µ—Å—Ç-–∫–µ–π—Å—ã":`);
  const searchResults = searchFullPrompts('—Ç–µ—Å—Ç-–∫–µ–π—Å—ã');
  searchResults.forEach(result => {
    console.log(`   ${result.category}.${result.type}: ${result.prompt.title}`);
  });
  
  console.log(`\nüìä –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:`);
  const testPlanPrompt = getFullPrompt('planning', 'testPlan');
  if (testPlanPrompt) {
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${testPlanPrompt.title}`);
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${testPlanPrompt.description}`);
    console.log(`   –ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç: ${testPlanPrompt.fullPrompt.substring(0, 100)}...`);
  }
  
  console.log(`\nüöÄ OnlyTests + CRM = –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!`);
  console.log(`\n‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: ${stats.tbdPrompts} –ø—Ä–æ–º–ø—Ç–æ–≤ —Ç—Ä–µ–±—É—é—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å —Å–∞–π—Ç–∞ OnlyTests!`);
}
