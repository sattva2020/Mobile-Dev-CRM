import { test as base } from '@playwright/test';
import { Page } from '@playwright/test';

/**
 * üîê Authentication Fixtures for CRM Tests
 * –§–∏–∫—Å—Ç—É—Ä—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ CRM —Å–∏—Å—Ç–µ–º—ã
 */

type AuthFixtures = {
  authenticatedPage: Page;
  adminPage: Page;
  userPage: Page;
  guestPage: Page;
};

export const test = base.extend<AuthFixtures>({
  /**
   * –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
   */
  authenticatedPage: async ({ page }, use) => {
    await page.goto('/login');
    await page.getByLabel('Username').fill('user');
    await page.getByLabel('Password').fill('password');
    await page.getByRole('button', { name: 'Login' }).click();
    await page.waitForURL('**/dashboard');
    await expect(page.getByText('Welcome')).toBeVisible();
    await use(page);
  },

  /**
   * –ê–¥–º–∏–Ω—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
   */
  adminPage: async ({ page }, use) => {
    await page.goto('/login');
    await page.getByLabel('Username').fill('admin');
    await page.getByLabel('Password').fill('admin123');
    await page.getByRole('button', { name: 'Login' }).click();
    await page.waitForURL('**/admin');
    await expect(page.getByText('Admin Dashboard')).toBeVisible();
    await use(page);
  },

  /**
   * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
   */
  userPage: async ({ page }, use) => {
    await page.goto('/login');
    await page.getByLabel('Username').fill('testuser');
    await page.getByLabel('Password').fill('testpass');
    await page.getByRole('button', { name: 'Login' }).click();
    await page.waitForURL('**/dashboard');
    await expect(page.getByText('User Dashboard')).toBeVisible();
    await use(page);
  },

  /**
   * –ì–æ—Å—Ç–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
   */
  guestPage: async ({ page }, use) => {
    await page.goto('/');
    await use(page);
  },
});

export { expect } from '@playwright/test';
