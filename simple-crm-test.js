#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç CRM API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */

const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BASE_URL = 'http://localhost:3000';

async function testCRMBasic() {
  console.log('üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç CRM API');
  console.log('='.repeat(50));
  console.log(`üîó Base URL: ${BASE_URL}`);
  console.log('='.repeat(50));

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    console.log('\nüì° –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API');
    console.log('-'.repeat(30));

    const healthCheck = await axios.get(BASE_URL);
    console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log(`üìä –í–µ—Ä—Å–∏—è: ${healthCheck.data.info?.version || 'Unknown'}`);

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('\nüìÅ –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤');
    console.log('-'.repeat(30));

    const projectsResponse = await axios.get(`${BASE_URL}/projects`);
    console.log(`‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã: ${projectsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    if (projectsResponse.data.length > 0) {
      console.log(`üìã –ü–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç: ${projectsResponse.data[0].name}`);
    }

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á
    console.log('\nüìã –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á');
    console.log('-'.repeat(30));

    const tasksResponse = await axios.get(`${BASE_URL}/tasks`);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∏ –ø–æ–ª—É—á–µ–Ω—ã: ${tasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    if (tasksResponse.data.length > 0) {
      console.log(`üìã –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞: ${tasksResponse.data[0].title}`);
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${tasksResponse.data[0].status}`);
      console.log(`üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${tasksResponse.data[0].priority}`);
    }

    // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    console.log('\nüìù –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π');
    console.log('-'.repeat(30));

    const requirementsResponse = await axios.get(`${BASE_URL}/requirements`);
    console.log(`‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: ${requirementsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    if (requirementsResponse.data.length > 0) {
      console.log(`üìã –ü–µ—Ä–≤–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ: ${requirementsResponse.data[0].title}`);
    }

    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    console.log('\nüîî –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    console.log('-'.repeat(30));

    const notificationsResponse = await axios.get(`${BASE_URL}/notifications`);
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: ${notificationsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    if (notificationsResponse.data.length > 0) {
      console.log(`üìã –ü–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${notificationsResponse.data[0].title}`);
      console.log(`üìä –¢–∏–ø: ${notificationsResponse.data[0].type}`);
    }

    // –¢–µ—Å—Ç 6: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ —Å—Ç–∞—Ç—É—Å—É
    console.log('\nüîç –¢–µ—Å—Ç 6: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ —Å—Ç–∞—Ç—É—Å—É');
    console.log('-'.repeat(30));

    const todoTasksResponse = await axios.get(`${BASE_URL}/tasks?status=eq.todo`);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∏ "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é": ${todoTasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    const inProgressTasksResponse = await axios.get(`${BASE_URL}/tasks?status=eq.in-progress`);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∏ "–í —Ä–∞–±–æ—Ç–µ": ${inProgressTasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    const doneTasksResponse = await axios.get(`${BASE_URL}/tasks?status=eq.done`);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∏ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ": ${doneTasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    // –¢–µ—Å—Ç 7: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    console.log('\nüîç –¢–µ—Å—Ç 7: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É');
    console.log('-'.repeat(30));

    const highPriorityTasksResponse = await axios.get(`${BASE_URL}/tasks?priority=eq.high`);
    console.log(`‚úÖ –ó–∞–¥–∞—á–∏ –≤—ã—Å–æ–∫–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞: ${highPriorityTasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);

    const mediumPriorityTasksResponse = await axios.get(`${BASE_URL}/tasks?priority=eq.medium`);
    console.log(
      `‚úÖ –ó–∞–¥–∞—á–∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞: ${mediumPriorityTasksResponse.data.length} –∑–∞–ø–∏—Å–µ–π`
    );

    // –¢–µ—Å—Ç 8: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä –¢–µ—Å—Ç 8: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ CRM');
    console.log('-'.repeat(30));

    const allTasks = tasksResponse.data;
    const stats = {
      total: allTasks.length,
      todo: allTasks.filter((t) => t.status === 'todo').length,
      inProgress: allTasks.filter((t) => t.status === 'in-progress').length,
      review: allTasks.filter((t) => t.status === 'review').length,
      done: allTasks.filter((t) => t.status === 'done').length,
      cancelled: allTasks.filter((t) => t.status === 'cancelled').length,
    };

    console.log(`üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${stats.total}`);
    console.log(`   –ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é: ${stats.todo}`);
    console.log(`   –í —Ä–∞–±–æ—Ç–µ: ${stats.inProgress}`);
    console.log(`   –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ: ${stats.review}`);
    console.log(`   –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${stats.done}`);
    console.log(`   –û—Ç–º–µ–Ω–µ–Ω–æ: ${stats.cancelled}`);

    // –¢–µ—Å—Ç 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîç –¢–µ—Å—Ç 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('-'.repeat(30));

    if (allTasks.length > 0) {
      const task = allTasks[0];
      console.log(`‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–¥–∞—á–∏:`);
      console.log(`   ID: ${task.id}`);
      console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${task.title}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${task.description}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${task.status}`);
      console.log(`   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority}`);
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${task.category}`);
      console.log(`   –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: ${task.assignee}`);
      console.log(`   –ú–µ—Ç–∫–∏: ${task.labels}`);
      console.log(`   –°—Ä–æ–∫: ${task.due_date}`);
      console.log(`   –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: ${task.estimated_hours} —á–∞—Å–æ–≤`);
      console.log(`   –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è: ${task.actual_hours} —á–∞—Å–æ–≤`);
      console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${task.progress}%`);
    }

    console.log('\n' + '='.repeat(50));
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! CRM API —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç—É—Å: ‚úÖ –ì–û–¢–û–í–û –ö –ü–†–û–î–ê–ö–®–ï–ù–£');
    console.log('üîó API: Supabase PostgREST');
    console.log('üì¶ SDK: Axios HTTP Client');
    console.log('üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏');
    console.log('üìà –î–∞–Ω–Ω—ã–µ: –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);

    if (error.response) {
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
      console.log('–°—Ç–∞—Ç—É—Å:', error.response.status);
    }

    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ CRM –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');

    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ CRM API...');
  console.log('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: Supabase PostgREST API');

  const success = await testCRMBasic();

  if (success) {
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üöÄ CRM API –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!');
    process.exit(0);
  } else {
    console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CRM API');
    process.exit(1);
  }
}

main().catch(console.error);
