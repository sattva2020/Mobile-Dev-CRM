#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ CRM
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ UI
 */

const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const FRONTEND_URL = 'http://localhost:3001';
const API_URL = 'http://localhost:3000';

async function testFrontend() {
  console.log('üåê –¢–µ—Å—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ CRM');
  console.log('='.repeat(50));
  console.log(`üîó Frontend URL: ${FRONTEND_URL}`);
  console.log(`üîó API URL: ${API_URL}`);
  console.log('='.repeat(50));

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    console.log('\nüåê –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞');
    console.log('-'.repeat(30));

    const frontendResponse = await axios.get(FRONTEND_URL);
    console.log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${frontendResponse.status}`);
    console.log(`üìÑ Content-Type: ${frontendResponse.headers['content-type']}`);

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log('\nüìÑ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');
    console.log('-'.repeat(30));

    const html = frontendResponse.data;
    const hasTitle = html.includes('<title>');
    const hasReactRoot = html.includes('id="root"');
    const hasManifest = html.includes('manifest.json');
    const hasFavicon = html.includes('favicon.ico');

    console.log(`‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${hasTitle ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    console.log(`‚úÖ React Root: ${hasReactRoot ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    console.log(`‚úÖ Manifest: ${hasManifest ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    console.log(`‚úÖ Favicon: ${hasFavicon ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    console.log('\nüì¶ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤');
    console.log('-'.repeat(30));

    try {
      const manifestResponse = await axios.get(`${FRONTEND_URL}/manifest.json`);
      console.log('‚úÖ Manifest.json –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`üì± –ù–∞–∑–≤–∞–Ω–∏–µ: ${manifestResponse.data.name || 'Unknown'}`);
    } catch (error) {
      console.log('‚ö†Ô∏è Manifest.json –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    try {
      const faviconResponse = await axios.get(`${FRONTEND_URL}/favicon.ico`);
      console.log('‚úÖ Favicon –¥–æ—Å—Ç—É–ø–µ–Ω');
    } catch (error) {
      console.log('‚ö†Ô∏è Favicon –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('\nüîó –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    console.log('-'.repeat(30));

    try {
      const apiResponse = await axios.get(API_URL);
      console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`üìä –í–µ—Ä—Å–∏—è API: ${apiResponse.data.info?.version || 'Unknown'}`);
    } catch (error) {
      console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`–û—à–∏–±–∫–∞: ${error.message}`);
    }

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS
    console.log('\nüîí –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS');
    console.log('-'.repeat(30));

    try {
      const corsResponse = await axios.get(`${API_URL}/projects`, {
        headers: {
          Origin: FRONTEND_URL,
        },
      });
      console.log('‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log(`üìä –ü—Ä–æ–µ–∫—Ç—ã: ${corsResponse.data.length} –∑–∞–ø–∏—Å–µ–π`);
    } catch (error) {
      console.log('‚ö†Ô∏è CORS –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      console.log(`–û—à–∏–±–∫–∞: ${error.message}`);
    }

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\n‚ö° –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    console.log('-'.repeat(30));

    const startTime = Date.now();
    const performanceResponse = await axios.get(FRONTEND_URL);
    const endTime = Date.now();
    const responseTime = endTime - startTime;

    console.log(`‚úÖ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${responseTime}ms`);

    if (responseTime < 1000) {
      console.log('üöÄ –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!');
    } else if (responseTime < 3000) {
      console.log('‚úÖ –•–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
    } else {
      console.log('‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞');
    }

    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    console.log('\nüîí –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
    console.log('-'.repeat(30));

    const securityHeaders = performanceResponse.headers;
    const hasCSP = securityHeaders['content-security-policy'];
    const hasXFrame = securityHeaders['x-frame-options'];
    const hasXSS = securityHeaders['x-xss-protection'];

    console.log(`‚úÖ CSP: ${hasCSP ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`‚úÖ X-Frame-Options: ${hasXFrame ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`‚úÖ X-XSS-Protection: ${hasXSS ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);

    // –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    console.log('\nüì± –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');
    console.log('-'.repeat(30));

    const hasViewport = html.includes('viewport');
    const hasMobileMeta = html.includes('mobile-web-app-capable');
    const hasThemeColor = html.includes('theme-color');

    console.log(`‚úÖ Viewport: ${hasViewport ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`‚úÖ Mobile Web App: ${hasMobileMeta ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`‚úÖ Theme Color: ${hasThemeColor ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);

    console.log('\n' + '='.repeat(50));
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –§—Ä–æ–Ω—Ç–µ–Ω–¥ CRM —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç—É—Å: ‚úÖ –ì–û–¢–û–í–û –ö –ü–†–û–î–ê–ö–®–ï–ù–£');
    console.log('üåê Frontend: React + TypeScript');
    console.log('üîó API: Supabase PostgREST');
    console.log('üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏');
    console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ—Å—Ç—å: –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω');
    console.log('üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);

    if (error.response) {
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
      console.log('–°—Ç–∞—Ç—É—Å:', error.response.status);
    }

    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3001');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS');
    console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã');

    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ CRM...');
  console.log('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: React + TypeScript + Supabase');

  const success = await testFrontend();

  if (success) {
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üöÄ –§—Ä–æ–Ω—Ç–µ–Ω–¥ CRM –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!');
    process.exit(0);
  } else {
    console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞');
    process.exit(1);
  }
}

main().catch(console.error);
