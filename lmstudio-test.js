#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º LM Studio API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ AI —Ñ—É–Ω–∫—Ü–∏–∏ CRM-—Å–∏—Å—Ç–µ–º—ã —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª—å—é
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://lmstudio.ai/docs/app/api/endpoints/openai
 */

const OpenAI = require('openai');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LM Studio
const LM_STUDIO_API_KEY = process.env.LM_STUDIO_API_KEY || 'lm-studio';
const LM_STUDIO_BASE_URL = process.env.LM_STUDIO_BASE_URL || 'http://172.30.48.1:11234/v1';
const MODEL_NAME = process.env.LM_STUDIO_MODEL || 'openai/gpt-oss-20b';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ LM Studio
const openai = new OpenAI({
  baseURL: LM_STUDIO_BASE_URL,
  apiKey: LM_STUDIO_API_KEY,
});

async function testLMStudioIntegration() {
  console.log('ü§ñ –¢–µ—Å—Ç AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å LM Studio API');
  console.log('='.repeat(60));
  console.log(`üîó Base URL: ${LM_STUDIO_BASE_URL}`);
  console.log(`ü§ñ –ú–æ–¥–µ–ª—å: ${MODEL_NAME}`);
  console.log('='.repeat(60));

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\nüîç –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('-'.repeat(30));

    try {
      const models = await openai.models.list();
      console.log('‚úÖ LM Studio —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: ${models.data.length}`);

      if (models.data.length > 0) {
        console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:');
        models.data.forEach((model, index) => {
          console.log(`  ${index + 1}. ${model.id}`);
        });
      }
    } catch (error) {
      console.log('‚ùå LM Studio —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ó–∞–ø—É—Å—Ç–∏—Ç–µ LM Studio –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ LM Studio');
      console.log('2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å openai/gpt-oss-20b');
      console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 1234)');
      return false;
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    console.log('\nüìù –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å');
    console.log('-'.repeat(30));

    const completion1 = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content:
            "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç CRM-—Å–∏—Å—Ç–µ–º—ã AI-Fitness Coach 360. –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ: 'AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!'",
        },
      ],
      temperature: 0.7,
      max_tokens: 100,
    });

    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç AI:');
    console.log(completion1.choices[0].message.content);

    // –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\nüìä –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('-'.repeat(30));

    const projectAnalysis = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content: `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–µ–∫—Ç:

–ü—Ä–æ–µ–∫—Ç: AI-Fitness Coach 360
–°—Ç–∞—Ç—É—Å: active
–í—Å–µ–≥–æ –∑–∞–¥–∞—á: 25
–í—ã–ø–æ–ª–Ω–µ–Ω–æ: 15
–í —Ä–∞–±–æ—Ç–µ: 7
–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: 3
–û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: 120 —á–∞—Å–æ–≤
–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è: 95 —á–∞—Å–æ–≤
–°–∫–æ—Ä–æ—Å—Ç—å: 5 –∑–∞–¥–∞—á/–Ω–µ–¥–µ–ª—é

–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è):`,
        },
      ],
      temperature: 0.7,
      max_tokens: 200,
    });

    console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞:');
    console.log(projectAnalysis.choices[0].message.content);

    // –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
    console.log('\nüéØ –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á');
    console.log('-'.repeat(30));

    const taskGeneration = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content: `–°–æ–∑–¥–∞–π 3 –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ AI-Fitness Coach 360:

–§–æ—Ä–º–∞—Ç:
1. –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
2. –û–ø–∏—Å–∞–Ω–∏–µ
3. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç (low/medium/high/urgent)
4. –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∞—Å–∞—Ö
5. –ú–µ—Ç–∫–∏

–ö—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É:`,
        },
      ],
      temperature: 0.7,
      max_tokens: 300,
    });

    console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á:');
    console.log(taskGeneration.choices[0].message.content);

    // –¢–µ—Å—Ç 5: AI –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    console.log('\nüí° –¢–µ—Å—Ç 5: AI –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è');
    console.log('-'.repeat(30));

    const suggestions = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content: `–î–∞–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:

–¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:
- –†–µ–∞–ª–∏–∑–∞—Ü–∏—è AI –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–∑ (–≤ —Ä–∞–±–æ—Ç–µ, 75% –≥–æ—Ç–æ–≤–æ)
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–æ–∂–∏–¥–∞–µ—Ç)
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ, 90% –≥–æ—Ç–æ–≤–æ)

–ü—Ä–æ–±–ª–µ–º—ã:
- 3 –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
- –ù–µ–¥–æ–æ—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ 25 —á–∞—Å–æ–≤
- –ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏

–î–∞–π 3-4 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:`,
        },
      ],
      temperature: 0.7,
      max_tokens: 250,
    });

    console.log('‚úÖ AI –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:');
    console.log(suggestions.choices[0].message.content);

    // –¢–µ—Å—Ç 6: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    console.log('\nüìã –¢–µ—Å—Ç 6: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞');
    console.log('-'.repeat(30));

    const report = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content: `–°–æ–∑–¥–∞–π –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É:

–ü—Ä–æ–µ–∫—Ç: AI-Fitness Coach 360
–ü–µ—Ä–∏–æ–¥: 2024-01-01 - 2024-09-24

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –í—Å–µ–≥–æ –∑–∞–¥–∞—á: 25
- –í—ã–ø–æ–ª–Ω–µ–Ω–æ: 15 (60%)
- –í —Ä–∞–±–æ—Ç–µ: 7 (28%)
- –û–∂–∏–¥–∞—é—Ç: 3 (12%)

–í–∫–ª—é—á–∏:
1. –û–±—â–∏–π –æ–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
2. –ö–ª—é—á–µ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
3. –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–∏—Å–∫–∏
4. –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é

–ö—Ä–∞—Ç–∫–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ:`,
        },
      ],
      temperature: 0.7,
      max_tokens: 400,
    });

    console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞:');
    console.log(report.choices[0].message.content);

    // –¢–µ—Å—Ç 7: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\n‚ö° –¢–µ—Å—Ç 7: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    console.log('-'.repeat(30));

    const performance = await openai.chat.completions.create({
      model: MODEL_NAME,
      messages: [
        {
          role: 'user',
          content: `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã:

–ú–µ—Ç—Ä–∏–∫–∏:
- –°–∫–æ—Ä–æ—Å—Ç—å: 5 –∑–∞–¥–∞—á/–Ω–µ–¥–µ–ª—é
- –¢–æ—á–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: 79%
- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 85%
- –ö–∞—á–µ—Å—Ç–≤–æ: 92%

–î–∞–π –∞–Ω–∞–ª–∏–∑:
1. –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
2. –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–ö—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É:`,
        },
      ],
      temperature: 0.7,
      max_tokens: 300,
    });

    console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
    console.log(performance.choices[0].message.content);

    console.log('\n' + '='.repeat(60));
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! LM Studio –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç—É—Å: ‚úÖ –ì–û–¢–û–í–û –ö –ü–†–û–î–ê–ö–®–ï–ù–£');
    console.log(`üîó –ú–æ–¥–µ–ª—å: ${MODEL_NAME}`);
    console.log('üåê API: LM Studio (–ª–æ–∫–∞–ª—å–Ω—ã–π)');
    console.log('üì¶ SDK: JavaScript OpenAI SDK');
    console.log('üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: 100% –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);

    if (error.response) {
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }

    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ LM Studio –∑–∞–ø—É—â–µ–Ω');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1234)');
    console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥–µ–ª—å openai/gpt-oss-20b –¥–æ—Å—Ç—É–ø–Ω–∞');
    console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ LM Studio –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');

    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å LM Studio...');
  console.log('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://lmstudio.ai/docs/app/api/endpoints/openai');

  const success = await testLMStudioIntegration();

  if (success) {
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ - –≤—Å–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ!');
    process.exit(0);
  } else {
    console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LM Studio');
    process.exit(1);
  }
}

main().catch(console.error);
